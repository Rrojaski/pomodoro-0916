{"version":3,"sources":["components/Button/Button.module.scss","components/Grid/Grid.module.scss","components/Text/Text.module.scss","components/Timer/Timer.module.scss","components/BreakControllers/BreakControllers.module.scss","actions/Actions.js","actions/types.js","components/Text/Text.js","components/Grid/Grid.js","components/Button/Button.js","components/Timer/Timer.js","components/WorkControllers/WorkControllers.js","components/BreakControllers/BreakControllers.js","components/TimerControllers/TimerControllers.js","App.js","components/Sound/Sound.js","serviceWorker.js","reducers/reducers.js","reducers/index.js","store.js","index.js"],"names":["module","exports","setTimerRunning","payload","type","setCurrentTime","Text","props","onClick","className","styles","size","children","Row","style","Col","Button","href","color","mod","Timer","timer","bind","this","timerRunning","clearInterval","timerId","cycle","startTimer","workTime","breakTime","currentTime","Component","ReduxTimer","connect","state","allReducer","dispatch","WorkControllers","handleWorkIncrement","handleWorkDecrement","incrementWorkTime","decrementWorkTime","ReduxWorkControllers","console","log","BreakControllers","handleBreakIncrement","handleBreakDecrement","incrementBreakTime","decrementBreakTime","ReduxBreakControllers","TimerControllers","App","setSound","sound","setState","duration","minutes","seconds","time","runningTimer","setInterval","setTimerId","Math","floor","setCycle","obj","ReduxApp","Boolean","window","location","hostname","match","initialState","combineReducers","store","thunk","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea873427.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"u-text-center\":\"Button_u-text-center__35wsT\",\"u-align-center\":\"Button_u-align-center__3U4br\",\"u-align-top\":\"Button_u-align-top__16NwE\",\"u-align-bottom\":\"Button_u-align-bottom__i5uaX\",\"u-font-enf\":\"Button_u-font-enf__IzbeC\",\"u-reset-anchor\":\"Button_u-reset-anchor__1HR1C\",\"u-checkbox-hide\":\"Button_u-checkbox-hide__3Nv99\",\"u-margin-bottom-sm\":\"Button_u-margin-bottom-sm__3YSMD\",\"u-margin-bottom-md\":\"Button_u-margin-bottom-md__3YCWR\",\"u-margin-bottom-lg\":\"Button_u-margin-bottom-lg__3TIrK\",\"Button\":\"Button_Button__1SyVu\",\"button-secondary\":\"Button_button-secondary__2XTS6\",\"play\":\"Button_play__34H4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"u-text-center\":\"Grid_u-text-center__3VXsK\",\"u-align-center\":\"Grid_u-align-center__1G1I-\",\"u-align-top\":\"Grid_u-align-top__136Yw\",\"u-align-bottom\":\"Grid_u-align-bottom__2yQ0T\",\"u-font-enf\":\"Grid_u-font-enf__Oj8Pl\",\"u-reset-anchor\":\"Grid_u-reset-anchor__3rBmo\",\"u-checkbox-hide\":\"Grid_u-checkbox-hide__2H1TZ\",\"u-margin-bottom-sm\":\"Grid_u-margin-bottom-sm__ul2rj\",\"u-margin-bottom-md\":\"Grid_u-margin-bottom-md__3Ft3S\",\"u-margin-bottom-lg\":\"Grid_u-margin-bottom-lg__3b0Uo\",\"Row\":\"Grid_Row__3ze0M\",\"Col\":\"Grid_Col__ZmKeo\",\"col-1-of-2\":\"Grid_col-1-of-2__1glye\",\"col-1-of-3\":\"Grid_col-1-of-3__1WEFS\",\"col-2-of-3\":\"Grid_col-2-of-3__14d84\",\"col-1-of-4\":\"Grid_col-1-of-4__2hzPh\",\"col-2-of-4\":\"Grid_col-2-of-4__2w673\",\"col-3-of-4\":\"Grid_col-3-of-4__3AcRC\",\"header__item__left\":\"Grid_header__item__left__2jYNc\",\"header__item__right\":\"Grid_header__item__right__1Vqfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"u-text-center\":\"Text_u-text-center__3Z_mc\",\"u-align-center\":\"Text_u-align-center__3I7Pp\",\"u-align-top\":\"Text_u-align-top__ZiJF5\",\"u-align-bottom\":\"Text_u-align-bottom__3qdJO\",\"u-font-enf\":\"Text_u-font-enf__2Njy2\",\"u-reset-anchor\":\"Text_u-reset-anchor__2CNc2\",\"u-checkbox-hide\":\"Text_u-checkbox-hide__2et-j\",\"u-margin-bottom-sm\":\"Text_u-margin-bottom-sm__sH0Gv\",\"u-margin-bottom-md\":\"Text_u-margin-bottom-md__1JeSB\",\"u-margin-bottom-lg\":\"Text_u-margin-bottom-lg__3mY_E\",\"Text\":\"Text_Text__1KLjC\",\"lg\":\"Text_lg__1LKl0\",\"pulse\":\"Text_pulse__HKAQs\",\"count-down\":\"Text_count-down__1DSY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"u-text-center\":\"Timer_u-text-center__2cT0R\",\"u-align-center\":\"Timer_u-align-center__3k2za\",\"u-align-top\":\"Timer_u-align-top__2akCf\",\"u-align-bottom\":\"Timer_u-align-bottom__6NP7J\",\"u-font-enf\":\"Timer_u-font-enf__V_J8T\",\"u-reset-anchor\":\"Timer_u-reset-anchor__YgRFK\",\"u-checkbox-hide\":\"Timer_u-checkbox-hide__4fQ_9\",\"u-margin-bottom-sm\":\"Timer_u-margin-bottom-sm__6TQY1\",\"u-margin-bottom-md\":\"Timer_u-margin-bottom-md__3LuY6\",\"u-margin-bottom-lg\":\"Timer_u-margin-bottom-lg__HpvGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"u-text-center\":\"BreakControllers_u-text-center__2ImaP\",\"u-align-center\":\"BreakControllers_u-align-center__1xXw6\",\"u-align-top\":\"BreakControllers_u-align-top__1Udn-\",\"u-align-bottom\":\"BreakControllers_u-align-bottom__fWv5P\",\"u-font-enf\":\"BreakControllers_u-font-enf__2FevD\",\"u-reset-anchor\":\"BreakControllers_u-reset-anchor__3Rjtt\",\"u-checkbox-hide\":\"BreakControllers_u-checkbox-hide__2K_c5\",\"u-margin-bottom-sm\":\"BreakControllers_u-margin-bottom-sm__2__-P\",\"u-margin-bottom-md\":\"BreakControllers_u-margin-bottom-md__3DMCi\",\"u-margin-bottom-lg\":\"BreakControllers_u-margin-bottom-lg__3Gun9\"};","import {\r\n  SESSION_ADD,\r\n  SESSION_REMOVE,\r\n  BREAK_ADD,\r\n  BREAK_REMOVE,\r\n  SET_TIMER_ID,\r\n  SET_TIMER_RUN,\r\n  SET_CYCLE,\r\n  TIMER_START,\r\n  SET_CURRENT_TIME\r\n} from \"./types\";\r\n\r\n// WorkControllers\r\nexport const incrementWorkTime = payload => {\r\n  console.log(\"addSession...\");\r\n  return {\r\n    type: SESSION_ADD,\r\n    payload: payload + 1\r\n  };\r\n};\r\n\r\nexport const decrementWorkTime = payload => {\r\n  console.log(\"addSession...\");\r\n  return {\r\n    type: SESSION_REMOVE,\r\n    payload: payload - 1\r\n  };\r\n};\r\n\r\n// BreakControllers\r\nexport const incrementBreakTime = payload => {\r\n  return {\r\n    type: BREAK_ADD,\r\n    payload: payload + 1\r\n  };\r\n};\r\n\r\nexport const decrementBreakTime = payload => {\r\n  return {\r\n    type: BREAK_REMOVE,\r\n    payload: payload - 1\r\n  };\r\n};\r\n\r\n// App\r\nexport const setTimerId = payload => {\r\n  return {\r\n    type: SET_TIMER_ID,\r\n    payload: payload\r\n  };\r\n};\r\n\r\nexport const setCycle = payload => {\r\n  return {\r\n    type: SET_CYCLE,\r\n    payload: payload\r\n  };\r\n};\r\n\r\nexport const setTimerRunning = payload => {\r\n  return {\r\n    type: SET_TIMER_RUN,\r\n    payload: payload\r\n  };\r\n};\r\n\r\n// Timer\r\nexport const startTimer = payload => {\r\n  return {\r\n    type: TIMER_START,\r\n    payload: payload\r\n  };\r\n};\r\n\r\nexport const setCurrentTime = payload => {\r\n  return {\r\n    type: SET_CURRENT_TIME,\r\n    payload: payload\r\n  };\r\n};\r\n\r\n","// WorkControllers\r\nexport const SESSION_ADD = \"SESSION_ADD\";\r\nexport const SESSION_REMOVE = \"SESSION_REMOVE\";\r\n\r\n// BreakControllers\r\nexport const BREAK_ADD = \"BREAK_ADD\";\r\nexport const BREAK_REMOVE = \"BREAK_REMOVE\";\r\n\r\n// App\r\nexport const SET_TIMER_ID = \"SET_TIMER_ID\";\r\nexport const SET_TIMER_RUN = \"SET_TIMER_RUN\";\r\n\r\nexport const SET_CYCLE = \"SET_CYCLE\";\r\n\r\n// Timer\r\nexport const TIMER_START = \"TIMER_START\";\r\nexport const SET_CURRENT_TIME = \"SET_CURRENT_TIME\";\r\n","import React from \"react\";\r\nimport styles from \"./Text.module.scss\";\r\n\r\nconst Text = props => {\r\n  return (\r\n    <span\r\n      onClick={props.onClick}\r\n      className={`${styles.Text} ${styles[props.size]} ${\r\n        styles[props.className]\r\n      }`}\r\n    >\r\n      {props.children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport styles from \"./Grid.module.scss\";\r\n\r\nexport const Row = props => {\r\n  return (\r\n    <Fragment>\r\n      <div style={props.style} className={`${styles.Row} ${props.className}`}>\r\n        {props.children}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const Col = props => {\r\n  return (\r\n    <Fragment>\r\n      <div className={`${styles.Col} ${styles[props.size]} ${styles[props.className]} ${props.className}`}>\r\n        {props.children}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\nimport styles from \"./Button.module.scss\";\r\n\r\nconst Button = props => {\r\n  return (\r\n    <a\r\n      onClick={props.onClick}\r\n      href={props.href}\r\n      className={`${styles.Button} ${styles[props.className]} ${\r\n        styles[props.type]\r\n      } ${styles[props.color]} ${styles[props.mod]}`}\r\n    >\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Timer.module.scss\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  startTimer,\r\n  setCurrentTime,\r\n  setTimerRunning\r\n} from \"../../actions/Actions\";\r\n\r\n// Components\r\nimport Text from \"../Text/Text\";\r\nimport { Col } from \"../Grid/Grid\";\r\nimport Button from \"../Button/Button\";\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.timer = this.timer.bind(this);\r\n  }\r\n  timer() {\r\n    if (this.props.timerRunning == true) {\r\n      clearInterval(this.props.timerId);\r\n      this.props.setCurrentTime(\"25 : 00\");\r\n      this.props.setTimerRunning(false);\r\n    } else {\r\n      this.props.cycle === \"Session\"\r\n        ? this.props.startTimer(this.props.workTime)\r\n        : this.props.startTimer(this.props.breakTime);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"timer u-text-center u-margin-bottom-md\">\r\n        <Text className=\"count-down\" size=\"lg\">\r\n          {this.props.currentTime}\r\n        </Text>\r\n        <Text>{this.props.cycle}</Text>\r\n        <Button onClick={this.timer} type=\"play\">\r\n          ⏯️\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentTime: state.allReducer.currentTime,\r\n    timerId: state.allReducer.timerId,\r\n    cycle: state.allReducer.cycle,\r\n    timerRunning: state.allReducer.timerRunning,\r\n    workTime: state.allReducer.workTime,\r\n    breakTime: state.allReducer.breakTime\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentTime: props => {\r\n      dispatch(setCurrentTime(props));\r\n    },\r\n    setTimerRunning: props => {\r\n      dispatch(setTimerRunning(props));\r\n    }\r\n  };\r\n};\r\n\r\nconst ReduxTimer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Timer);\r\n\r\nexport default ReduxTimer;\r\n","import React, { Component } from \"react\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { incrementWorkTime, decrementWorkTime } from \"../../actions/Actions\";\r\n\r\n// Components\r\nimport Button from \"../Button/Button\";\r\nimport Text from \"../Text/Text\";\r\n\r\nclass WorkControllers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleWorkIncrement = this.handleWorkIncrement.bind(this);\r\n    this.handleWorkDecrement = this.handleWorkDecrement.bind(this);\r\n  }\r\n  handleWorkIncrement() {\r\n    if (this.props.workTime < 60) {\r\n      this.props.incrementWorkTime(this.props.workTime);\r\n    }\r\n    if (this.props.timerRunning === false) {\r\n      this.props.setCurrentTime(this.props.workTime);\r\n    }\r\n  }\r\n  handleWorkDecrement() {\r\n    if (this.props.workTime > 1) {\r\n      this.props.decrementWorkTime(this.props.workTime);\r\n    }\r\n    if (this.props.timerRunning === false) {\r\n      this.props.setCurrentTime(this.props.workTime);\r\n    }\r\n  }\r\n  render(props) {\r\n    return (\r\n      <div className=\"controller u-margin-bottom-sm\">\r\n        <Text className='u-margin-bottom-sm'>Session Length</Text>\r\n        <br />\r\n        <Button onClick={this.handleWorkIncrement}> + </Button>\r\n        <Text>{this.props.workTime}</Text>\r\n        <Button onClick={this.handleWorkDecrement}> - </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"mapStateToPropsSession...\");\r\n  return { workTime: state.allReducer.workTime };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  console.log(\"mapDispatchToPropsSession...\");\r\n  return {\r\n    incrementWorkTime: props => {\r\n      dispatch(incrementWorkTime(props));\r\n    },\r\n    decrementWorkTime: props => {\r\n      dispatch(decrementWorkTime(props));\r\n    }\r\n  };\r\n};\r\n\r\nconst ReduxWorkControllers = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WorkControllers);\r\n\r\nexport default ReduxWorkControllers;\r\n","import React, { Component } from \"react\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { incrementBreakTime, decrementBreakTime } from \"../../actions/Actions\";\r\n\r\n// Components\r\nimport Button from \"../Button/Button\";\r\nimport Text from \"../Text/Text\";\r\n\r\nimport \"./BreakControllers.module.scss\";\r\n\r\nclass BreakControllers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleBreakIncrement = this.handleBreakIncrement.bind(this);\r\n    this.handleBreakDecrement = this.handleBreakDecrement.bind(this);\r\n  }\r\n  handleBreakIncrement() {\r\n    if (this.props.breakTime < 25) {\r\n      this.props.incrementBreakTime(this.props.breakTime);\r\n    }\r\n  }\r\n  handleBreakDecrement() {\r\n    if (this.props.breakTime > 1) {\r\n      this.props.decrementBreakTime(this.props.breakTime);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"controller u-center\">\r\n        <Text className=\"u-margin-bottom-sm\">Break Length</Text>\r\n        <br />\r\n        <Button onClick={this.handleBreakIncrement}> + </Button>\r\n        <Text>{this.props.breakTime}</Text>\r\n        <Button onClick={this.handleBreakDecrement}> - </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { breakTime: state.allReducer.breakTime };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    incrementBreakTime: props => {\r\n      dispatch(incrementBreakTime(props));\r\n    },\r\n    decrementBreakTime: props => {\r\n      dispatch(decrementBreakTime(props));\r\n    }\r\n  };\r\n};\r\n\r\nconst ReduxBreakControllers = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BreakControllers);\r\n\r\nexport default ReduxBreakControllers;\r\n","import React, { Component } from \"react\";\r\n\r\n// Components\r\nimport ReduxWorkControllers from \"../WorkControllers/WorkControllers\";\r\nimport ReduxBreakControllers from \"../BreakControllers/BreakControllers\";\r\n\r\nclass TimerControllers extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"timer-controllers u-text-center u-margin-bottom-md\">\r\n        <ReduxWorkControllers />\r\n        <ReduxBreakControllers />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimerControllers;\r\n","import React, { Component } from \"react\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  setTimerId,\n  setCycle,\n  setTimerRunning,\n  setCurrentTime\n} from \"./actions/Actions\";\n\n// Components\nimport Timer from \"./components/Timer/Timer\";\nimport TimerControllers from \"./components/TimerControllers/TimerControllers\";\nimport Sound from \"./components/Sound/Sound\";\nimport { Row, Col } from \"./components/Grid/Grid\";\n\nimport \"./App.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.setSound = this.setSound.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.setCurrentTime = this.setCurrentTime.bind(this);\n    this.setTimerRunning = this.setTimerRunning.bind(this);\n  }\n\n  // Make Sound component\n  setSound = sound => {\n    this.setState({\n      sound: sound\n    });\n  };\n  // Refactor\n  // **********\n  setCurrentTime(obj) {\n    this.setState({\n      currentTime: obj\n    });\n  }\n  setTimerRunning(obj) {\n    this.setState({\n      timerRunning: obj\n    });\n  }\n\n  // **********\n\n  startTimer = duration => {\n    console.log(\"startTimer\");\n    console.log(duration);\n    this.props.setTimerRunning(true);\n    let time = duration * 60;\n    let minutes;\n    let seconds;\n    let runningTimer = setInterval(() => {\n      this.props.setTimerId(runningTimer);\n\n      minutes = Math.floor(time / 60);\n      seconds = time - minutes * 60;\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      console.log(`${minutes} : ${seconds}`);\n      this.props.setCurrentTime(`${minutes} : ${seconds}`);\n      if (time == 0) {\n        if (this.props.cycle === \"Session\") {\n          console.log(\"Switching to break\");\n          // @Desc\n          // If Session ran out switch to break\n          this.props.setCycle(\"Break\");\n          this.props.setTimerRunning(false);\n          clearInterval(this.props.timerId);\n          this.startTimer(this.props.breakTime);\n        } else {\n          console.log(\"Switching to session\");\n          this.props.setCycle(\"Session\");\n          this.props.setTimerRunning(false);\n          clearInterval(this.props.timerId);\n          this.startTimer(this.props.workTime);\n        }\n      }\n      time--;\n    }, 1000);\n  };\n  render(props) {\n    return (\n      <div className=\"App\">\n        <Row>\n          <h1 className=\"u-margin-bottom-sm\">POMODORO CLOCK</h1>\n          <Col size=\"col-1-of-2\">\n            <Timer startTimer={this.startTimer} />\n          </Col>\n          <Col size=\"col-1-of-2\">\n            <TimerControllers />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cycle: state.allReducer.cycle,\n    currentTime: state.allReducer.currentTime,\n    timerId: state.allReducer.timerId,\n    workTime: state.allReducer.workTime,\n    breakTime: state.allReducer.breakTime\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTimerId: props => {\n      dispatch(setTimerId(props));\n    },\n    setCycle: props => {\n      dispatch(setCycle(props));\n    },\n    setTimerRunning: props => {\n      dispatch(setTimerRunning(props));\n    },\n    setCurrentTime: props => {\n      dispatch(setCurrentTime(props));\n    }\n  };\n};\n\nconst ReduxApp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nexport default ReduxApp;\n\n/*\n\nRefactor\n\n\n          timerRunning={this.state.timerRunning}\n          timerId={this.state.timerId}\n          currentTime={this.state.currentTime}\n          setCurrentTime={this.setCurrentTime}\n          setTimerRunning={this.setTimerRunning}\n          cycle={this.state.cycle}\n          \n          workTime={this.state.workTime}\n          breakTime={this.state.breakTime}\n\n\n\n\n                    workTime={this.state.workTime}\n          breakTime={this.state.breakTime}\n          setCurrentTime={this.setCurrentTime}\n          incrementWorkTime={this.incrementWorkTime}\n          decrementWorkTime={this.decrementWorkTime}\n          incrementBreakTime={this.incrementBreakTime}\n          decrementBreakTime={this.decrementBreakTime}\n\n\n          <Sound setSound={this.setSound} sound={this.state.sound} />\n\n*/\n","import React, { Component } from 'react';\r\n\r\n// Components\r\nimport Button from '../Button/Button';\r\n\r\nclass Sound extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.toggleSound = this.toggleSound.bind(this);\r\n    }\r\n    toggleSound() {\r\n      console.log(\"click\");\r\n      this.props.sound === \"on\"\r\n        ? this.props.setSound(\"off\")\r\n        : this.props.setSound(\"on\");\r\n    }\r\n    render() {\r\n      return (\r\n        <div className='u-text-center'>\r\n          <Button type='button-secondary' onClick={this.toggleSound}>SOUND</Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\n  export default Sound;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  SESSION_ADD,\r\n  SESSION_REMOVE,\r\n  BREAK_ADD,\r\n  BREAK_REMOVE,\r\n  SET_TIMER_ID,\r\n  SET_TIMER_RUN,\r\n  SET_CYCLE,\r\n  TIMER_START,\r\n  SET_CURRENT_TIME\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  timerId: 0,\r\n  timerRunning: false,\r\n  currentTime: \"25 : 00\",\r\n  cycle: \"Session\",\r\n  workTime: 25,\r\n  breakTime: 5,\r\n  sound: \"on\"\r\n};\r\n\r\nexport const timeReducer = (state = initialState, { type, payload }) => {\r\n  console.log(\"timeReducer...\");\r\n  switch (type) {\r\n    case SESSION_ADD:\r\n      return { ...state, workTime: payload };\r\n      break;\r\n    case SESSION_REMOVE:\r\n      return { ...state, workTime: payload };\r\n      break;\r\n    case BREAK_ADD:\r\n      return { ...state, breakTime: payload };\r\n      break;\r\n    case BREAK_REMOVE:\r\n      return { ...state, breakTime: payload };\r\n      break;\r\n    case SET_TIMER_ID:\r\n      return { ...state, timerId: payload };\r\n      break;\r\n    case SET_TIMER_RUN:\r\n      return { ...state, timerRunning: payload };\r\n      break;\r\n    case SET_CURRENT_TIME:\r\n      return { ...state, currentTime: payload };\r\n      break;\r\n    case SET_CYCLE:\r\n      return { ...state, cycle: payload };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { timeReducer } from \"./reducers\";\r\n\r\nexport default combineReducers({\r\n  allReducer: timeReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {\r\n  state: \"check store\"\r\n};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport ReduxApp from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReduxApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}